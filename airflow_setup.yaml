---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
    spec:
      containers:
        - name: airflow
          image: apache/airflow:latest  # Use the desired Apache Airflow image
          ports:
            - containerPort: 8080      # Port on which Airflow Web UI will be exposed
          volumeMounts:
            - name: airflow-pvc
              mountPath: /opt/airflow/dags  # Mount point for DAGs folder
      volumes:
        - name: airflow-pvc
          persistentVolumeClaim:
            claimName: airflow-pvc        # Name of the PVC to use for DAGs storage

---

apiVersion: v1
kind: Service
metadata:
  name: airflow-service
spec:
  selector:
    app: airflow
  ports:
    - protocol: TCP
      port: 8080       # Port on which the service will listen
      targetPort: 8080 # Port on which the pods are listening
  type: LoadBalancer   # Use 'LoadBalancer' to expose externally (may vary based on your cluster setup)

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: airflow-pv
spec:
  capacity:
    storage: 10Gi      # Adjust the storage size as needed
  accessModes:
    - ReadWriteOnce   # Use 'ReadWriteMany' for multiple node read/write access
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: "/path/to/airflow_data"  # Change to the path on your host system

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-pvc
spec:
  accessModes:
    - ReadWriteOnce    # Use 'ReadWriteMany' for multiple node read/write access
  resources:
    requests:
      storage: 10Gi      # Match the storage size specified in the Persistent Volume
